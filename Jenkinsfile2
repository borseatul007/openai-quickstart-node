pipeline {
  agent none
  
  stages {
    stage('SCM') {
      agent {
        label 'abhi2'
      }
      steps {
        checkout scm
      }
    }
    
    stage('SonarQube Analysis') {
      agent {
        label 'Master'
      }
      steps {
        script {
          def scannerHome = tool 'sonarqube'
          withSonarQubeEnv() {
            sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=webapp -Dsonar.sources=."
          }
        }
      }
    }
  stage('Deploy') {
    agent {
        label 'abhi2'
      }
          steps {

            sh 'sudo apt install php-fpm -y'
            sh 'sudo apt install mysql-server -y'
            sh 'wget -c https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-english.tar.gz'
            sh 'tar xzvf phpMyAdmin-5.2.1-english.tar.gz'
            sh 'sudo mv phpMyAdmin-5.2.1-english /usr/share/phpmyadmin'
            sh 'sudo cp /root/jenkins/workspace/nodejs/phpmyadmin.conf /etc/nginx/snippets/'
            sh 'sudo cp /root/jenkins/workspace/nodejs/website.conf /etc/nginx/sites-available/atul.com.conf'
            sh 'sudo ln -s /etc/nginx/sites-available/atul.com.conf /etc/nginx/sites-enabled'
            sh 'sudo apt update'
            sh 'sudo apt install -y nodejs'
            sh 'sudo apt install npm'

            sh 'sudo npm install -g pm2 || npm install -g pm2@latest' // Install PM2 globally, try latest version if not found
            
            //sh 'pm2 stop all' // Stop any previously running PM2 processes
            //sh 'pm2 delete all' // Delete any previously configured PM2 processes

            //sh 'scp -r ./src user@192.168.1.100:/path/to/deploy' // Use SCP to deploy the code to the remote server
            
            
          
          }
        }
      }

}  
   
 
